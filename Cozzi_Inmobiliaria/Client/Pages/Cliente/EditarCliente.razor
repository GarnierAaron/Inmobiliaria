@page "/clientes/edit/{id:long}"
@using Cozzi_Inmobiliaria.Shared.Dto;
@inject HttpClient Http
@inject NavigationManager Navigation
<h3>Modificar Cliente</h3>
@if (_cliente == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <EditForm Model="@_cliente" OnValidSubmit="Put">
        <div class="form-group">
            <label>Nombres: </label>
            <InputText @bind-Value="_cliente.Nombres" />
        </div>
        <div class="form-group">
            <label>Apellidos</label>
            <InputText @bind-Value="_cliente.Apellidos" />
        </div>
        <div class="form-group">
            <label>Documento</label>
            <InputNumber @bind-Value="_cliente.Documento" />
        </div>
        <div class="form-group">
            <label>CuitCuil</label>
            <InputNumber @bind-Value="_cliente.CuitCuil" />
        </div>
        <div class="form-group">
            <label>Telefono</label>
            <InputText @bind-Value="_cliente.Telefono" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <InputText @bind-Value="_cliente.Email" />
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Editar" />
        </div>
    </EditForm>
    <button class="btn btn-primary" @onclick="Volver">Volver</button>
}
@code {
    [Parameter]
    public long Id { get; set; }
    private ClienteRequestDto _cliente = null;
    protected override async Task OnInitializedAsync()
    {
        _cliente = await Http.GetFromJsonAsync<ClienteRequestDto>($"/api/Clientes/{Id}");
    }
    private async Task Put()
    {
        await Http.PutAsJsonAsync<ClienteRequestDto>($"/api/Clientes/{_cliente.Id}", _cliente);
        Volver();
    }
    private void Volver()
    {
        Navigation.NavigateTo("/clientes");
    }
}
